[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
readme = "README.md"
authors = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"}
]
maintainers = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"}
]
classifiers = [

]
dynamic = ["dependencies", "optional-dependencies"]
requires-python = ">=3.11"

[project.urls]
Homepage = ""
Repository = ""

[tool.setuptools.packages.find]
include = ["{{cookiecutter.project_slug}}*"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
optional-dependencies = {dev = { file = ["requirements-dev.txt"] }}

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "pep621"
major_version_zero = false

[tool.ruff]
line-length = 88
lint.ignore-init-module-imports = true
lint.extend-select = [
    "I",  # sort imports
    "Q",  # force double quotes
    "TID" # force no relative imports from parent
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
files = [
    "{{cookiecutter.project_slug}}",
    "tests",
]
ignore_missing_imports = true
explicit_package_bases = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = 'tests.*'
disable_error_code = "var-annotated"

[tool.pytest.ini_options]
addopts = "--cov=event_handler --cov-report term --cov-config=pyproject.toml"
required_plugins = ["pytest-cov"]
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_empty = true
fail_under = 70
sort = "cover"
show_missing = true
exclude_lines = [
    "if __name__ == .__main__.:"
]
